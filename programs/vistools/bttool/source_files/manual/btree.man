.\" Copyright (c) 1994 University of Wisconsin - Madison.
.\" All rights reserved.  
.\"
.TH Tickle_BTree 1 "May 2, 1996"
.UC 4
.SH NAME
Tickle_BTree - A Tk visualization tool
.SH SYNTAX
.nf
.ft B
bt_demo 
.fi
.SH WINDOWS
.IP "\fBMain window\fP"
Shows the \fIBtree\fP as it evolves during execution of the actions
contained in the \fIlog_file.\fP Click on the nodes to see their \fBcurrent\fP
contents.
.IP "\fBPath followed\fP"
Shows the path followed during the search. Click on the nodes too see their
contents \fBbefore\fP the updates.
.IP "\fBNode contents before update\fP"
The contents of the node last selected in the \fIPath_followed\fP window
are shown here.
.SH BUTTONS
.IP "\fBnext\fP \fIn\fP"
Step down the trace file named \fItrace_filename\fP
.I n
lines. The default is 1, but it can be changed manually. Breakpoints
are ignored.
..
.IP "\fBstep\fP"
Same as \fInext 1
..
.IP "\fBcont\fP"
Continue until you encounter a \fIbreakpoint.
..
.IP "\fBcreate_btree\fP \fIbtree_name\fP \fIrec_len\fP \fIdelete_type\fP"
Creates a new btree, with name \fIbtree_name\fP, record length
\fIrec_len\fP (in bytes),  using naive delete
algorithm if \fIdelete_type\fP = 0, full delete algorithm if
\fIdelete_type\fP = 1. It can only be executed before reading any
trace. Upon creating a new btree, reading from trace file is disabled.
..
.IP "\fBinsert\fP \fIkey\fP \fIpage_no\fP \fIslot_no\fP"
Interactively inserts a record with key = \fIkey\fP, record id =
{\fIpage_no\fP,\fIslot_no\fP}. If the trace file is read, it's only
enabled after one full action from the trace file has been
finished, i.e. "DONE" has been read from the trace. Upon inserting any
record interactively, reading from the trace file is disabled. 
..
.IP "\fBdelete\fP \fIkey\fP \fIpage_no\fP \fIslot_no\fP"
Interactively deletes a record with key = \fIkey\fP, record id =
{\fIpage_no\fP,\fIslot_no\fP}. If the trace file is read, it's only
enabled after one full action from the trace file has been
finished, i.e. "DONE" has been read from the trace. Upon deleting any
record interactively, reading from the trace file is disabled. 
.fi
.SH MENUBUTTONS
.IP "\fBView - Toggle Tree Layout"
Toggle the Btree layout between the horizontal and vertical positions.
..
.IP "\fBFile - Print Tree"
Print the visible portion of the tree - a window will pop up to 
specify the printer options.
..
.IP "\fBHelp"
Shows man page(s) for each window.
.fi
.SH DESCRIPTION
.PP
Tickle_BTree works as follows: Usually there exists a file (selected by the user)
which contains a \fIlog\fP of the actions performed on the Btree.(See
the next section for case when the operations are input interactively.)  The format
of the file should be as specified below:
.DS
INSERT (or DELETE) \fIrid\fP \fIkey\fP
DO
VISIT node \fIn1\fP
VISIT node \fIn2\fP
etc ...
SPLIT node \fInx\fP IN nodes \fInx1\fP \fInx2\fP (if necessary)
MERGE nodes \fInx\fP \fIny\fP (if necessary)
CHILDREN \fInx1\fP nodes \fInx1a\fP \fInx1b\fP ...
CHILDREN \fInx2\fP nodes \fInx2a\fP \fInx2b\fP ...
SPLIT ...
PUTIN (or TAKE_FROM) node \fInx\fP
DONE
.PP
In case the root gets split, due to an insertion, the \fItrace_file\fP
should contain: 
.PP
ROOTSPLIT IN nodes \fIn1\fP \fIn2\fP
CHILDREN \fIn1\fP ...
NEWROOT \fIn3\fP
.DE
.PP
In case the root gets deleted, due to an deletion, the
\fItrace_file\fP should contain:
.PP
CHANGEROOT from node \fInx\fP to node \fIny\fP
or 
DEALLOCATEROOT \fInx\fP (if the tree is empty)
.DE
.PP
(Tcl is case sensitive, so the trace file should contain the info exactly
as specified above) 
.fi
.SH HOW IT WORKS
.PP
Tickle_BTree works with 
.I minibase
running in the background and incorporates its features. 
.PP
If a trace exists and is  read by \fBTickle_BTree\fP, the
.IBlogical 
actions in it are
executed by
.I minibase
while at the same time the actions (both the logical and the ones taken
by the 
.I Btree
such as node splitting etc.) are depicted on the screen. The 
.I visited
and 
.I splitted
nodes are shown with different bitmaps. By clicking on any \fInode\fP
the user can see its contents.
.PP
The trace file is generated by a btree driver program. There is a
template program called \fIbtree-template.C\fP which illustrates how
to create a btree, how to specify its record length and delete
algorithm to use and where trace goes. It also shows how to generate
record from an integer key or string key and how to insert/delete
records. 
.PP
The user can also choose to input actions interactively which will
disable  reading from trace. In this case, the actions (just
\fIinsert\fP or \fIdelete\fP) chosen by the
user are executed by minibase while at the same time the trace
generated by minibase is used to change the shape of the tree.  
.fi
.SH "\fBBreakpoints"
\fIBreakpoints\fP can be inserted in the \fItrace_file\fP by inserting a
line with a * as its only character. Only the \fBcont\fP button acts
on the breakpoints.
.fi
.SH NOTE
.PP
Click on the node \fBname\fP rather than the bitmap.
.SH Bugs
.PP
Unknown yet.
