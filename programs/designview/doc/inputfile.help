
dbnorm Help: Input File Format
=================================

This help file describes the format of a dbnorm input file.  Some
sample input files have been placed in the dbnorm/examples directory.

Input to dbnorm comes from an ASCII file, and by convention the input
files have a ".dbn" file extension.  The input file can be created by
running o2r on an Opossum Entity-Relationship (ER) data schema, or you
can create the file by hand. The input file contains descriptions of
"objects" that the software interprets as a representation of a
relational database schema, together with a set of functional
dependencies (FDs) and decompositions for the schema.  Three types of
objects can exist in the input file:

	* Database
	* Relation
	* Session

What follows are details on how each type of object is represented in
the input file, and some small sample input files.

First some general comments on the structure of the input file:

     1.	The input file is a set of object descriptions.  Each object
	has a type, and a collection of properties.  Every object
	description must begin with a line of the form "% <type>"
	where <type> can be Database, Relation, or Session. Each
	property of an object is specified by a line of the form
	PROPERTY = VALUE.  If a label in the VALUE expression contains
	spaces, then that label should be surrounded by braces.

		ex: Attribute ={First Name} Int

     2. IMPORTANT: Attribute names are defined over the entire
	database, not within a specific relation.  So if two relations
	contain an attribute with the same name, then the system
	assumes that these two attributes are the same.



The dbnorm Database
=================================

In dbnorm, a database is a collection of relations, and a relation is
a set of attributes.  The database also contains a set of functional
dependencies, and a list of special relations referred to as the
"source relations".  The source relations are those relations that are
defined independent of any decompositions that have taken place.  For
example, if you translate an Opossum ER schema to a dbnorm input file,
the relations that are generated by the translation serve as the
source relations, and any decompositions you perform inside dbnorm
generate new "derived" relations.  The list of source relations never
changes in dbnorm.

The description of your database must begin with the line:

	% Database

Following this line, you can define attributes and functional
dependencies.  Each attribute and FD is defined on a separate line,
and the lines should look like this:

	Attribute = <attribute name> <type>
	FD = <antecedent> <consequent>
	
	Examples:	Attribute = Salary real
			Attribute = Name char(30)
			FD = Name Department

			Here's the FD "Course,Student -> Grade"...
 			    FD = {Course Student} Grade

			And here's "Zip Code,Region -> Carrier,Vehicle"...
			    FD = {{Zip Code} Region} {Carrier Vehicle}

Spaces in attribute names are allowed, but remember, you must surround
the entire name with braces like this:

	Attribute = {Date of Birth} date

Each attribute list in an FD definition must be surrounded by braces,
and again it's OK to have spaces in the attribute names as long as the
whole name is surrounded by braces. You can also omit the braces
around an attribute list if the list contains only one element.

Here's an example of a complete database description:

	% Database
	Attribute = Emp integer
	Attribute = Dept integer
	Attribute = EmpName char(30)
	Attribute = DeptName char(30)
	FD = Emp {Dept EmpName}
	FD = Dept DeptName



Relations
=================================

The next section of the input file after the database section is the
Relation section, and this section contains a set of relation
descriptions.  Each relation has a name, a set of attributes, a set of
decomposition sessions, and a key.  Also, each relation must have a
unique object identifier.  The OIDs are used to refer to relations in
the third section of the file--the Session section.

Here's an example of a relation description:

	% Relation
	Name = Employees
	ID = 001
	Attributes = Emp EmpName Dept DeptName
	Key = Emp
	Foreign Key = Dept 002
	Sessions = 101 102 103

A few details on the relation descriptions:

	- Spaces in relation names are allowed.
	- There must be a session description (placed in the Session
	  section of the file) for each session in the session list and
	  the OID of the session should match the OID in the relation's
	  session list.
	- The first session in the list is considered the "default"
	  session.
	- Relation names do not have do be distinct, only the OIDs.
	- Do not surround the attribute list, key list, or session list
	  with braces.

	  Example: To define the key to be two attributes, X and Y:

	  Right: Key = X Y	(this creates a two-attribute key)
	  WRONG: Key = {X Y}	(this would be interpreted as a single
				 attribute named "X Y")

	- The foreign key line should have the form:

	      Foreign Key = <attribute list> <relation>

	  where <attribute list> is a list of attributes and <relation>
	  is the OID of the other relation that has those attributes as
	  its key.



Sessions
=================================

The final section of the input file is the Session section, and it
contains a set of session descriptions.  Each session has a name, and
a set of decompositions.  Also, each session must have a unique object
identifier.  The OIDs are used in relation descriptions to refer to
decomposition sessions that have the given relation as the root.

Each session description begins with a "% Session" line.  Following
that line, you must specify an OID, a name, and a set of
decompositions for the sessions.  The decompositions should look like:

	Decomposition = <parent relation> <list of children relations>
	
Here's an example of a complete session description:

	% Session
	ID = 102
	Name = Session 1
	Decomposition = 001 {004 005}
	Decomposition = 005 {008 015 016}
	Decomposition = 008 {017 031}

The session descriptions simply contain parent-child relationships.
In the example above, all we know about the session is that the
relation with OID 001 was decomposed into two relations, 004 and 005.
Relation 005 was decomposed further into relations 008, 015, and 016,
and so on.  The "root" relations of sessions are not specified in the
session descriptions; this information can be computed by the system
by examining the list of sessions created for a particular relation.



Summary
=================================

The input file contains three sections: Database, Relation, and
Sessions.  

	Database: The database section defines all attributes and FDs
	  for the database, and contains a list of the source relations.

	Relations: The relation section defines all relations (source
	  relations and derived relations).  A relation has a name, an
	  OID, a set of attributes, a key, and a set of decomposition
	  sessions.  The key and sessions are optional.

	Sessions: The session section defines all decomposition sessions
	  that have been generated in dbnorm.  Each session has a name,
	  an OID, and a set of decompositions.


